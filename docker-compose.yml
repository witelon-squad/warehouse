version: '3.7'
services:
  app-server:
    build:
      context: server 
      dockerfile: Dockerfile
    ports:
      - "8080:8080" 
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://95.111.242.110:3306/warehousedatabase
    restart: always
    depends_on: 
      - db   
    networks: 
      - backend
      - frontend

  # Frontend Service 
  app-client:
    build:
      context: client 
      dockerfile: Dockerfile
    ports:
      - "9090:80" 
    volumes:
      - ./client/nginx/conf.d/:/etc/nginx/conf.d/
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  
  # Database Service (Mysql)
  db:
    image: mysql:8.0.22
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password']
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: warehousedatabase
      MYSQL_ROOT_PASSWORD: 135elo99
    volumes:
      - ./database:/var/lib/mysql
    networks:
      - backend
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.8
    restart: always
    links:
      - db:db
    ports:
      - 8091:80
    depends_on: 
      - db
    networks: 
      - app-network
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: 135elo99
    networks:
      - backend
  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend: 
